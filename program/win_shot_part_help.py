# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'win_shot_part_help.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from log import add_log
import pynput.mouse as pm

import subprocess
from threading import Thread


class Ui_SshotPartGetWindow(object):
    def __init__(self):
        self.x = []
        self.y = []
        self.button = None
        self.click_time = 0


    def setupUi(self, SshotPartGetWindow):
        SshotPartGetWindow.setObjectName("SshotPartGetWindow")
        SshotPartGetWindow.resize(400, 300)
        SshotPartGetWindow.setMinimumSize(QtCore.QSize(400, 300))
        SshotPartGetWindow.setMaximumSize(QtCore.QSize(400, 300))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("../img/all.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        SshotPartGetWindow.setWindowIcon(icon)
        self.buttonBox = QtWidgets.QDialogButtonBox(SshotPartGetWindow)
        self.buttonBox.setGeometry(QtCore.QRect(30, 240, 341, 32))
        self.buttonBox.setOrientation(QtCore.Qt.Horizontal)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Cancel|QtWidgets.QDialogButtonBox.Ok)
        self.buttonBox.setObjectName("buttonBox")
        self.label = QtWidgets.QLabel(SshotPartGetWindow)
        self.label.setGeometry(QtCore.QRect(10, 10, 361, 181))
        self.label.setObjectName("label")

        self.retranslateUi(SshotPartGetWindow)
        # 信号连接槽函数
        self.buttonBox.accepted.connect(self.get_shot_part)
        self.buttonBox.rejected.connect(SshotPartGetWindow.reject)
        QtCore.QMetaObject.connectSlotsByName(SshotPartGetWindow)


    def get_shot_part(self):
        """框选截图"""
        SshotPartGetWindow.accept()

        def listener(x, y, button, pressed):
            if pressed and (button == pm.Button.left):
                add_log("Button left detected")
                self.click_time += 1
                if self.click_time < 3:
                    self.x.append(x)
                    self.y.append(y)
                    add_log(f"Current value x is {str(self.x)}")
                    add_log(f"Current value y is {str(self.y)}")
                elif self.click_time >= 3:
                    return False

        def listen_th_f():
            with pm.Listener(on_click=listener) as pmlistener:
                pmlistener.join()

        def get_th_f():
            while True:
                if len(self.x) == 2 and len(self.y) == 2:
                    add_log("Start to part shot")
                    add_log("Running f-shot.exe part {self.x[0]} {self.y[0]} {self.x[1]} {self.y[1]}")
                    subprocess.call(f'shot.exe part {self.x[0]} {self.y[0]} {self.x[1]} {self.y[1]}')
                    add_log("Run successful, waiting to save and reset value")
                    self.x.clear()
                    self.y.clear()
                    self.click_time = 0
                    add_log("Ending threads")
                    break
        add_log("Setting threads to part shot")
        listen_th = Thread(target=listen_th_f, daemon=True)
        get_th = Thread(target=get_th_f, daemon=True)
        add_log("Starting threads")
        listen_th.start()
        get_th.start()
        add_log("Start successful")


    def retranslateUi(self, SshotPartGetWindow):
        _translate = QtCore.QCoreApplication.translate
        SshotPartGetWindow.setWindowTitle(_translate("SshotPartGetWindow", "框选截图/录屏帮助"))
        self.label.setText(_translate("SshotPartGetWindow", "<html><head/><body><p><span style=\" font-size:11pt;\">在点击OK按钮后, 点击截图/录屏左上角坐标点,</span></p><p><span style=\" font-size:11pt;\"> 再点击截图/录屏右下角坐标点即可,截图和录屏较慢请耐心等待</span></p></body></html>"))


SshotPartGetWindow = QtWidgets.QDialog()
ui = Ui_SshotPartGetWindow()
ui.setupUi(SshotPartGetWindow)
